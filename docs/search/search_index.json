{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"JDbase Documentation","text":"<p>This document provides an overview of the JDbase API developed to interact with databases and manage users via HTTP requests.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Introduction</li> <li>API Endpoints</li> <li><code>/api</code></li> <li><code>/users</code></li> </ul>"},{"location":"#introduction","title":"Introduction","text":"<p>The JDBase API is designed to facilitate database operations and user management through HTTP requests. It offers endpoints for executing CRUD (Create, Read, Update, Delete) operations on databases, as well as for creating and managing users.</p>"},{"location":"#api-endpoints","title":"API Endpoints","text":""},{"location":"#api-endpoint","title":"<code>/api</code> Endpoint","text":""},{"location":"#post-api","title":"POST <code>/api</code>","text":"<p>This endpoint is used for executing CRUD operations on databases. It requires an API key provided in the request header for authentication and authorization.</p> <ul> <li>Type: POST</li> <li>Request Headers:</li> <li><code>api_key</code>: The API key for authentication.</li> <li>Request Body:</li> <li><code>db</code>: The name of the database.</li> <li><code>query</code>: The query to be executed.</li> <li><code>type</code>: The type of operation (<code>create</code>, <code>read</code>, <code>update</code>, <code>delete</code>, <code>match</code>).</li> <li><code>update_query</code> (optional): The query for updating records (required for update operation).</li> <li>Response:</li> <li>Success: JSON response with the result of the operation and HTTP status code 200.</li> <li>Error: JSON response with error message and corresponding HTTP status code (401, 403, 400, 404, 500).</li> </ul> <p>Supported Operations:</p> <ul> <li>Create: Add new records to the database.</li> <li>Read: Retrieve records from the database.</li> <li>Update: Modify existing records in the database.</li> <li>Delete: Remove records from the database.</li> <li>Match: Check if records match specified criteria.</li> </ul>"},{"location":"#post-users","title":"POST <code>/users</code>","text":"<p>This endpoint is used for creating users with specific permissions. It also requires an API key provided in the request header for authentication and authorization.</p> <ul> <li>Type: POST</li> <li>Request Headers:</li> <li><code>api_key</code>: The API key for authentication.</li> <li>Request Body:</li> <li><code>name</code>: The name of the user.</li> <li><code>permission</code>: The permissions assigned to the user (<code>create</code>, <code>read</code>, <code>update</code>, <code>delete</code>).</li> <li>Response:</li> <li>Success: JSON response with a message confirming user creation and the generated API key, along with HTTP status code 200.</li> <li>Error: JSON response with error message and corresponding HTTP status code (401, 403, 400).</li> </ul>"},{"location":"#supported-operations","title":"Supported Operations","text":"<ul> <li>Create: Add new records to the database.</li> <li>Read: Retrieve records from the database.</li> <li>Update: Modify existing records in the database.</li> <li>Delete: Remove records from the database.</li> <li>Match: Check if records match specified criteria.</li> </ul>"},{"location":"#example","title":"Example :","text":"<p>Default api key is \"adminkey\" you can change this editng config/apis.json</p> <p>Create: </p> <pre><code>import requests\nurl = \"http://127.0.0.1:5000/api\"\npayload = {\n    \"db\": \"db1\",\n    \"type\": \"create\",\n    \"query\": {\n        \"name\": \"Rakib Hossain\",\n        \"Skill\": \"Python\"\n    }\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>Read:</p> <pre><code>import requests\n\nurl = \"http://127.0.0.1:5000/api\"\n\npayload = {\n    \"db\": \"db1\",\n    \"type\": \"read\",\n    \"query\": {\n        \"Skill\": \"Python\"\n    }\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>Update:</p> <pre><code>import requests\n\nurl = \"http://127.0.0.1:5000/api\"\n\npayload = {\n    \"db\": \"db1\",\n    \"type\": \"update\",\n    \"query\": {\n        \"Skill\": \"Python\"\n    },\n    \"update_query\":{\n        \"Skill\":\"Python_Api\"\n    }\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>Delete:</p> <pre><code>import requests\n\nurl = \"http://127.0.0.1:5000/api\"\n\npayload = {\n    \"db\": \"db1\",\n    \"type\": \"Delete\",\n    \"query\": {\n    \"Skill\": \"PHP\"\n    }\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>Match:</p> <pre><code>import requests\n\nurl = \"http://127.0.0.1:5000/api\"\n\npayload = {\n    \"db\": \"db1\",\n    \"type\": \"match\",\n    \"query\": {\n    \"email\":\"user@jdmail.com\",\n    \"password\":\"user@password\"\n    }\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>Create_user:</p> <pre><code>import requests\n\nurl = \"http://127.0.0.1:5000/user\"\n\npayload = {\n    \"name\": \"Developer\",\n    \"permission\":[\"read\",\"create\",\"update\",\"delete\"]\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>Create Database:</p> <pre><code>import requests\n\nurl = \"http://127.0.0.1:5000/api\"\n\npayload = {\n    \"db\": \"db1\",\n    \"type\": \"create_db\",\n    \"query\": {\n    \"name\":\"user\"\n    }\n}\nheaders = {\"api_key\": \"adminkey\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <p>For any other unexpected errors, the API returns a generic \"Internal Error\" message with HTTP status code 500.</p>"},{"location":"#contribute-on-github","title":"Contribute ON Github","text":"<p>Happy Development</p>"}]}